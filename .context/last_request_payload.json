{
  "system_prompt": "あなたは、OSSの日本人コントリビューターであり、翻訳者です。\nユーザーが提示した、英語で書かれたdocstringやコメントを、ルールに従い、日本語に翻訳してください。\n翻訳結果は、出力フォーマットに従い、JSON形式で出力してください。\n\n### ルール\n- 固有名詞は、翻訳しなくていいです。（例：Azure AI Project など）\n- 変数名(ex.agent_name)やpython言語にまつわる定義、各パラメータなど、markdownのコードブロックなどのmd表現は翻訳しなくていいです。\n- docstringにおいて、”Examples”, “Keyword Args” などの見出しとなる部分は、どの言語でも共通して英語が用いられる慣習があるので、そのままとして良いです。\n- 翻訳不要単語が存在します。翻訳不要単語はカタカナや和訳せずにそのまま英語で表現してください。\n\n### 翻訳不要単語\nAgent, ID, Thread, Chat, Client, Class, Context, Import, Export, Key, Token, Secret, Config, Prompt, Request, Response, State, Message, Optional, None, Middleware, Executor\n\n### 出力フォーマット\n{\n  \"translations\": [\n    {\n      \"index\": <入力と同じindex>,\n      \"translation\": \"<翻訳後の和訳文>\"\n    }\n  ]\n}\n- translations 配列の要素数は入力と同じにしてください。\n- index は入力値をそのまま写してください。\n",
  "user_payload": {
    "items": [
      {
        "index": 0,
        "original": "Copyright (c) Microsoft. All rights reserved."
      },
      {
        "index": 1,
        "original": "Copyright (c) Microsoft. All rights reserved."
      },
      {
        "index": 2,
        "original": "Azure OpenAI Assistants client."
      },
      {
        "index": 3,
        "original": "Initialize an Azure OpenAI Assistants client.\n\n        Keyword Args:\n            deployment_name: The Azure OpenAI deployment name for the model to use.\n                Can also be set via environment variable AZURE_OPENAI_CHAT_DEPLOYMENT_NAME.\n            assistant_id: The ID of an Azure OpenAI assistant to use.\n                If not provided, a new assistant will be created (and deleted after the request).\n            assistant_name: The name to use when creating new assistants.\n            thread_id: Default thread ID to use for conversations. Can be overridden by\n                conversation_id property when making a request.\n                If not provided, a new thread will be created (and deleted after the request).\n            api_key: The API key to use. If provided will override the env vars or .env file value.\n                Can also be set via environment variable AZURE_OPENAI_API_KEY.\n            endpoint: The deployment endpoint. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_ENDPOINT.\n            base_url: The deployment base URL. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_BASE_URL.\n            api_version: The deployment API version. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_API_VERSION.\n            ad_token: The Azure Active Directory token.\n            ad_token_provider: The Azure Active Directory token provider.\n            token_endpoint: The token endpoint to request an Azure token.\n                Can also be set via environment variable AZURE_OPENAI_TOKEN_ENDPOINT.\n            credential: The Azure credential to use for authentication.\n            default_headers: The default headers mapping of string keys to\n                string values for HTTP requests.\n            async_client: An existing client to use.\n            env_file_path: Use the environment settings file as a fallback\n                to environment variables.\n            env_file_encoding: The encoding of the environment settings file.\n\n        Examples:\n            .. code-block:: python\n\n                from agent_framework.azure import AzureOpenAIAssistantsClient\n\n                # Using environment variables\n                # Set AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com\n                # Set AZURE_OPENAI_CHAT_DEPLOYMENT_NAME=gpt-4\n                # Set AZURE_OPENAI_API_KEY=your-key\n                client = AzureOpenAIAssistantsClient()\n\n                # Or passing parameters directly\n                client = AzureOpenAIAssistantsClient(\n                    endpoint=\"https://your-endpoint.openai.azure.com\", deployment_name=\"gpt-4\", api_key=\"your-key\"\n                )\n\n                # Or loading from a .env file\n                client = AzureOpenAIAssistantsClient(env_file_path=\"path/to/.env\")\n        "
      },
      {
        "index": 4,
        "original": "pydantic settings will see if there is a value, if not, will try the env var or .env file"
      },
      {
        "index": 5,
        "original": "Handle authentication: try API key first, then AD token, then Entra ID"
      },
      {
        "index": 6,
        "original": "Create Azure client if not provided"
      },
      {
        "index": 7,
        "original": "Copyright (c) Microsoft. All rights reserved."
      },
      {
        "index": 8,
        "original": "Azure OpenAI Chat completion class."
      },
      {
        "index": 9,
        "original": "Initialize an Azure OpenAI Chat completion client.\n\n        Keyword Args:\n            api_key: The API key. If provided, will override the value in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_API_KEY.\n            deployment_name: The deployment name. If provided, will override the value\n                (chat_deployment_name) in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_CHAT_DEPLOYMENT_NAME.\n            endpoint: The deployment endpoint. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_ENDPOINT.\n            base_url: The deployment base URL. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_BASE_URL.\n            api_version: The deployment API version. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_API_VERSION.\n            ad_token: The Azure Active Directory token.\n            ad_token_provider: The Azure Active Directory token provider.\n            token_endpoint: The token endpoint to request an Azure token.\n                Can also be set via environment variable AZURE_OPENAI_TOKEN_ENDPOINT.\n            credential: The Azure credential for authentication.\n            default_headers: The default headers mapping of string keys to\n                string values for HTTP requests.\n            async_client: An existing client to use.\n            env_file_path: Use the environment settings file as a fallback to using env vars.\n            env_file_encoding: The encoding of the environment settings file, defaults to 'utf-8'.\n            instruction_role: The role to use for 'instruction' messages, for example, summarization\n                prompts could use `developer` or `system`.\n            kwargs: Other keyword parameters.\n\n        Examples:\n            .. code-block:: python\n\n                from agent_framework.azure import AzureOpenAIChatClient\n\n                # Using environment variables\n                # Set AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com\n                # Set AZURE_OPENAI_CHAT_DEPLOYMENT_NAME=gpt-4\n                # Set AZURE_OPENAI_API_KEY=your-key\n                client = AzureOpenAIChatClient()\n\n                # Or passing parameters directly\n                client = AzureOpenAIChatClient(\n                    endpoint=\"https://your-endpoint.openai.azure.com\", deployment_name=\"gpt-4\", api_key=\"your-key\"\n                )\n\n                # Or loading from a .env file\n                client = AzureOpenAIChatClient(env_file_path=\"path/to/.env\")\n        "
      },
      {
        "index": 10,
        "original": "Filter out any None values from the arguments"
      },
      {
        "index": 11,
        "original": "pydantic settings will see if there is a value, if not, will try the env var or .env file"
      },
      {
        "index": 12,
        "original": "Parse the choice into a TextContent object.\n\n        Overwritten from OpenAIBaseChatClient to deal with Azure On Your Data function.\n        For docs see:\n        https://learn.microsoft.com/en-us/azure/ai-foundry/openai/references/on-your-data?tabs=python#context\n        "
      },
      {
        "index": 13,
        "original": "Context is not a valid JSON string, ignoring context."
      },
      {
        "index": 14,
        "original": "Context is not a valid dictionary, ignoring context."
      },
      {
        "index": 15,
        "original": "`all_retrieved_documents` is currently not used, but can be retrieved\nthrough the raw_representation in the text content."
      },
      {
        "index": 16,
        "original": "Copyright (c) Microsoft. All rights reserved."
      },
      {
        "index": 17,
        "original": "Retrieve a Microsoft Entra Auth Token for a given token endpoint.\n\n    The token endpoint may be specified as an environment variable, via the .env\n    file or as an argument. If the token endpoint is not provided, the default is None.\n\n    Args:\n        credential: The Azure credential to use for authentication.\n        token_endpoint: The token endpoint to use to retrieve the authentication token.\n\n    Keyword Args:\n        **kwargs: Additional keyword arguments to pass to the token retrieval method.\n\n    Returns:\n        The Azure token or None if the token could not be retrieved.\n    "
      },
      {
        "index": 18,
        "original": "Retrieve a async Microsoft Entra Auth Token for a given token endpoint.\n\n    The token endpoint may be specified as an environment variable, via the .env\n    file or as an argument. If the token endpoint is not provided, the default is None.\n\n    Args:\n        credential: The async Azure credential to use for authentication.\n        token_endpoint: The token endpoint to use to retrieve the authentication token.\n\n    Keyword Args:\n        **kwargs: Additional keyword arguments to pass to the token retrieval method.\n\n    Returns:\n        The Azure token or None if the token could not be retrieved.\n    "
      },
      {
        "index": 19,
        "original": "Copyright (c) Microsoft. All rights reserved."
      },
      {
        "index": 20,
        "original": "Azure Responses completion class."
      },
      {
        "index": 21,
        "original": "Initialize an Azure OpenAI Responses client.\n\n        Keyword Args:\n            api_key: The API key. If provided, will override the value in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_API_KEY.\n            deployment_name: The deployment name. If provided, will override the value\n                (responses_deployment_name) in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_RESPONSES_DEPLOYMENT_NAME.\n            endpoint: The deployment endpoint. If provided will override the value\n                in the env vars or .env file.\n                Can also be set via environment variable AZURE_OPENAI_ENDPOINT.\n            base_url: The deployment base URL. If provided will override the value\n                in the env vars or .env file. Currently, the base_url must end with \"/openai/v1/\".\n                Can also be set via environment variable AZURE_OPENAI_BASE_URL.\n            api_version: The deployment API version. If provided will override the value\n                in the env vars or .env file. Currently, the api_version must be \"preview\".\n                Can also be set via environment variable AZURE_OPENAI_API_VERSION.\n            ad_token: The Azure Active Directory token.\n            ad_token_provider: The Azure Active Directory token provider.\n            token_endpoint: The token endpoint to request an Azure token.\n                Can also be set via environment variable AZURE_OPENAI_TOKEN_ENDPOINT.\n            credential: The Azure credential for authentication.\n            default_headers: The default headers mapping of string keys to\n                string values for HTTP requests.\n            async_client: An existing client to use.\n            env_file_path: Use the environment settings file as a fallback to using env vars.\n            env_file_encoding: The encoding of the environment settings file, defaults to 'utf-8'.\n            instruction_role: The role to use for 'instruction' messages, for example, summarization\n                prompts could use `developer` or `system`.\n            kwargs: Additional keyword arguments.\n\n        Examples:\n            .. code-block:: python\n\n                from agent_framework.azure import AzureOpenAIResponsesClient\n\n                # Using environment variables\n                # Set AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com\n                # Set AZURE_OPENAI_RESPONSES_DEPLOYMENT_NAME=gpt-4o\n                # Set AZURE_OPENAI_API_KEY=your-key\n                client = AzureOpenAIResponsesClient()\n\n                # Or passing parameters directly\n                client = AzureOpenAIResponsesClient(\n                    endpoint=\"https://your-endpoint.openai.azure.com\", deployment_name=\"gpt-4o\", api_key=\"your-key\"\n                )\n\n                # Or loading from a .env file\n                client = AzureOpenAIResponsesClient(env_file_path=\"path/to/.env\")\n        "
      },
      {
        "index": 22,
        "original": "pydantic settings will see if there is a value, if not, will try the env var or .env file"
      },
      {
        "index": 23,
        "original": "TODO(peterychang): This is a temporary hack to ensure that the base_url is set correctly\nwhile this feature is in preview.\nBut we should only do this if we're on azure. Private deployments may not need this."
      },
      {
        "index": 24,
        "original": "Copyright (c) Microsoft. All rights reserved."
      },
      {
        "index": 25,
        "original": "AzureOpenAI model settings.\n\n    The settings are first loaded from environment variables with the prefix 'AZURE_OPENAI_'.\n    If the environment variables are not found, the settings can be loaded from a .env file\n    with the encoding 'utf-8'. If the settings are not found in the .env file, the settings\n    are ignored; however, validation will fail alerting that the settings are missing.\n\n    Keyword Args:\n        endpoint: The endpoint of the Azure deployment. This value\n            can be found in the Keys & Endpoint section when examining\n            your resource from the Azure portal, the endpoint should end in openai.azure.com.\n            If both base_url and endpoint are supplied, base_url will be used.\n            Can be set via environment variable AZURE_OPENAI_ENDPOINT.\n        chat_deployment_name: The name of the Azure Chat deployment. This value\n            will correspond to the custom name you chose for your deployment\n            when you deployed a model. This value can be found under\n            Resource Management > Deployments in the Azure portal or, alternatively,\n            under Management > Deployments in Azure AI Foundry.\n            Can be set via environment variable AZURE_OPENAI_CHAT_DEPLOYMENT_NAME.\n        responses_deployment_name: The name of the Azure Responses deployment. This value\n            will correspond to the custom name you chose for your deployment\n            when you deployed a model. This value can be found under\n            Resource Management > Deployments in the Azure portal or, alternatively,\n            under Management > Deployments in Azure AI Foundry.\n            Can be set via environment variable AZURE_OPENAI_RESPONSES_DEPLOYMENT_NAME.\n        api_key: The API key for the Azure deployment. This value can be\n            found in the Keys & Endpoint section when examining your resource in\n            the Azure portal. You can use either KEY1 or KEY2.\n            Can be set via environment variable AZURE_OPENAI_API_KEY.\n        api_version: The API version to use. The default value is `default_api_version`.\n            Can be set via environment variable AZURE_OPENAI_API_VERSION.\n        base_url: The url of the Azure deployment. This value\n            can be found in the Keys & Endpoint section when examining\n            your resource from the Azure portal, the base_url consists of the endpoint,\n            followed by /openai/deployments/{deployment_name}/,\n            use endpoint if you only want to supply the endpoint.\n            Can be set via environment variable AZURE_OPENAI_BASE_URL.\n        token_endpoint: The token endpoint to use to retrieve the authentication token.\n            The default value is `default_token_endpoint`.\n            Can be set via environment variable AZURE_OPENAI_TOKEN_ENDPOINT.\n        default_api_version: The default API version to use if not specified.\n            The default value is \"2024-10-21\".\n        default_token_endpoint: The default token endpoint to use if not specified.\n            The default value is \"https://cognitiveservices.azure.com/.default\".\n        env_file_path: The path to the .env file to load settings from.\n        env_file_encoding: The encoding of the .env file, defaults to 'utf-8'.\n\n    Examples:\n        .. code-block:: python\n\n            from agent_framework.azure import AzureOpenAISettings\n\n            # Using environment variables\n            # Set AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com\n            # Set AZURE_OPENAI_CHAT_DEPLOYMENT_NAME=gpt-4\n            # Set AZURE_OPENAI_API_KEY=your-key\n            settings = AzureOpenAISettings()\n\n            # Or passing parameters directly\n            settings = AzureOpenAISettings(\n                endpoint=\"https://your-endpoint.openai.azure.com\", chat_deployment_name=\"gpt-4\", api_key=\"your-key\"\n            )\n\n            # Or loading from a .env file\n            settings = AzureOpenAISettings(env_file_path=\"path/to/.env\")\n    "
      },
      {
        "index": 26,
        "original": "Retrieve a Microsoft Entra Auth Token for a given token endpoint for the use with Azure OpenAI.\n\n        The required role for the token is `Cognitive Services OpenAI Contributor`.\n        The token endpoint may be specified as an environment variable, via the .env\n        file or as an argument. If the token endpoint is not provided, the default is None.\n        The `token_endpoint` argument takes precedence over the `token_endpoint` attribute.\n\n        Args:\n            credential: The Azure AD credential to use.\n            token_endpoint: The token endpoint to use. Defaults to `https://cognitiveservices.azure.com/.default`.\n\n        Keyword Args:\n            **kwargs: Additional keyword arguments to pass to the token retrieval method.\n\n        Returns:\n            The Azure token or None if the token could not be retrieved.\n\n        Raises:\n            ServiceInitializationError: If the token endpoint is not provided.\n        "
      },
      {
        "index": 27,
        "original": "Internal class for configuring a connection to an Azure OpenAI service."
      },
      {
        "index": 28,
        "original": "Internal class for configuring a connection to an Azure OpenAI service.\n\n        The `validate_call` decorator is used with a configuration that allows arbitrary types.\n        This is necessary for types like `HTTPsUrl` and `OpenAIModelTypes`.\n\n        Args:\n            deployment_name: Name of the deployment.\n            endpoint: The specific endpoint URL for the deployment.\n            base_url: The base URL for Azure services.\n            api_version: Azure API version. Defaults to the defined DEFAULT_AZURE_API_VERSION.\n            api_key: API key for Azure services.\n            ad_token: Azure AD token for authentication.\n            ad_token_provider: A callable or coroutine function providing Azure AD tokens.\n            token_endpoint: Azure AD token endpoint use to get the token.\n            credential: Azure credential for authentication.\n            default_headers: Default headers for HTTP requests.\n            client: An existing client to use.\n            instruction_role: The role to use for 'instruction' messages, for example, summarization\n                prompts could use `developer` or `system`.\n            kwargs: Additional keyword arguments.\n\n        "
      },
      {
        "index": 29,
        "original": "Note: INJECTABLE = {\"client\"} is inherited from OpenAIBase"
      },
      {
        "index": 30,
        "original": "Merge APP_INFO into the headers if it exists"
      },
      {
        "index": 31,
        "original": "If the client is None, the api_key is none, the ad_token is none, and the ad_token_provider is none,\nthen we will attempt to get the ad_token using the default endpoint specified in the Azure OpenAI\nsettings."
      },
      {
        "index": 32,
        "original": "Store configuration as instance attributes for serialization"
      },
      {
        "index": 33,
        "original": "Store default_headers but filter out USER_AGENT_KEY for serialization"
      }
    ]
  }
}