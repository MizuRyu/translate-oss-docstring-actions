name: Translate (Test)

on:
  workflow_dispatch:
    inputs:
      repository_url:
        description: "検証対象のリポジトリ URL"
        required: true
        default: "https://github.com/microsoft/agent-framework"
        type: string
      subdirectory:
        description: "対象がモノレポの場合のサブディレクトリパス"
        required: false
        default: "python"
        type: string
      max_records:
        description: "翻訳する最大件数"
        required: false
        default: 10
        type: number
      mock_mode:
        description: "モックモードで翻訳する"
        required: false
        default: true
        type: boolean
      exclude_terms:
        description: "和訳対象から除外したい単語群"
        required: false
        default: ""
        type: string
      artifact_dir:
        description: "成果物を保存するディレクトリ"
        required: false
        default: "translated"
        type: string

jobs:
  translate-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout comment-translator repository
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync --frozen

      - name: Clone target repository
        run: |
          git clone --depth 1 "${{ inputs.repository_url }}" target-repo

      - name: Extract content
        run: |
          mkdir -p out
          uv run python main.py extract target-repo/${{ inputs.subdirectory }} \
            --output out/extracted.jsonl \
            --log-level INFO

      - name: Summarize tokens
        run: |
          uv run python scripts/summarize_tokens.py \
            --input out/extracted.jsonl \
            --output out/token-summary.json
          cat out/token-summary.json

      - name: Run translation (test mode)
        run: |
          TRANSLATE_ARGS=()
          if [ "${{ inputs.max_records }}" != "0" ]; then
              TRANSLATE_ARGS+=("--limit" "${{ inputs.max_records }}")
          fi
          if [ -n "${{ inputs.exclude_terms }}" ]; then
              TRANSLATE_ARGS+=("--exclude-terms" "${{ inputs.exclude_terms }}")
          fi
          if [[ "${{ inputs.mock_mode }}" == 'true' ]]; then
              TRANSLATE_ARGS+=("--mock")
          fi
          uv run python main.py translate out/extracted.jsonl \
            --output out/translated.jsonl \
            --failed-output out/unprocessed.jsonl \
            "${TRANSLATE_ARGS[@]}" \
            --log-level INFO

      - name: Apply results (indirect)
        run: |
          uv run python main.py replace out/translated.jsonl \
            --output-dir out/translated_sources \
            --root target-repo/${{ inputs.subdirectory }} \
            --log-level INFO

      - name: Collect artifacts
        run: |
          mkdir -p ${{ inputs.artifact_dir }}
          cp out/extracted.jsonl ${{ inputs.artifact_dir }}/
          cp out/translated.jsonl ${{ inputs.artifact_dir }}/
          cp out/unprocessed.jsonl ${{ inputs.artifact_dir }}/
          cp out/token-summary.json ${{ inputs.artifact_dir }}/
          cp -R out/translated_sources ${{ inputs.artifact_dir }}/
          echo "Artifacts saved to: ${{ inputs.artifact_dir }}"
          ls -R ${{ inputs.artifact_dir }}

      - name: Upload test artifacts
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: translation-test-results
          path: ${{ inputs.artifact_dir }}
